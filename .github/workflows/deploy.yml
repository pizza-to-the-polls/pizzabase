name: Deploy

on:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
        with:
          node-version: 12

      - name: npm install dependencies
        run: npm install

      - name: run prettier
        run: npm run prettier

      - name: run tslint
        run: npm run lint

      - name: run tests
        run: npm run test
        env:
          SS_AUTH_ID: ${{ secrets.SS_AUTH_ID }}
          SS_AUTH_TOKEN: ${{ secrets.SS_AUTH_TOKEN }}
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres

  build:
    runs-on: ubuntu-latest

    needs: test

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
        with:
          node-version: 12

      - name: npm install dependencies
        run: npm install

      - name: create ormconfig.json
        run: echo $ORMCONFIG_JSON > $GITHUB_WORKSPACE/ormconfig.json
        env:
          ORMCONFIG_JSON: ${{ secrets.ORMCONFIG_JSON }}

      - name: Serverless
        uses: serverless/github-action@v1.53.0
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SS_AUTH_ID: ${{ secrets.SS_AUTH_ID }}
          SS_AUTH_TOKEN: ${{ secrets.SS_AUTH_TOKEN }}
          ZAP_NEW_REPORT: ${{ secrets.ZAP_NEW_REPORT }}
          ZAP_NEW_LOCATION: ${{ secrets.ZAP_NEW_LOCATION }}
          GOOGLE_MAPS_KEY: ${{ secrets.GOOGLE_MAPS_KEY }}
